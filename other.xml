<application>
  <component name="AppInspectionProfilesVisibleTreeState">
    <entry key="Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>Action Cable</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
          <State>
            <id>Bitwise operation issuesJava</id>
          </State>
          <State>
            <id>Code style issuesJava</id>
          </State>
          <State>
            <id>Control flow issuesJava</id>
          </State>
          <State>
            <id>Error handlingJava</id>
          </State>
          <State>
            <id>Groovy</id>
          </State>
          <State>
            <id>Initialization issuesJava</id>
          </State>
          <State>
            <id>J2ME issuesJava</id>
          </State>
          <State>
            <id>JUnit issuesJava</id>
          </State>
          <State>
            <id>Java</id>
          </State>
          <State>
            <id>Potentially confusing code constructsGroovy</id>
          </State>
          <State>
            <id>SQL</id>
          </State>
          <State>
            <id>TestNGJava</id>
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>AOP</id>
          </State>
          <State>
            <id>AbstractClassWithOnlyOneDirectInheritor</id>
          </State>
          <State>
            <id>AbstractMethodCallInConstructor</id>
          </State>
          <State>
            <id>Abstraction issuesJava</id>
          </State>
          <State>
            <id>Action Cable</id>
          </State>
          <State>
            <id>Android</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Accessibility</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Correctness</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Correctness &gt; Messages</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Internationalization</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Internationalization &gt; Bidirectional Text</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Performance</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Security</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Usability</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Usability &gt; Icons</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Usability &gt; Typography</id>
          </State>
          <State>
            <id>Android Lint for Kotlin</id>
          </State>
          <State>
            <id>Annotations verifyingGroovy</id>
          </State>
          <State>
            <id>Ant inspections</id>
          </State>
          <State>
            <id>Application Server Specific Inspections</id>
          </State>
          <State>
            <id>ArquillianJava</id>
          </State>
          <State>
            <id>ArrayCreationWithoutNewKeyword</id>
          </State>
          <State>
            <id>ArrayLengthInLoopCondition</id>
          </State>
          <State>
            <id>AssertEqualsBetweenInconvertibleTypes</id>
          </State>
          <State>
            <id>AssertEqualsBetweenInconvertibleTypesTestNG</id>
          </State>
          <State>
            <id>AssertEqualsCalledOnArray</id>
          </State>
          <State>
            <id>AssertEqualsMayBeAssertSame</id>
          </State>
          <State>
            <id>AssertMessageNotString</id>
          </State>
          <State>
            <id>AssertionCanBeIf</id>
          </State>
          <State>
            <id>AssertsWithoutMessages</id>
          </State>
          <State>
            <id>AssertsWithoutMessagesTestNG</id>
          </State>
          <State>
            <id>Assignment issuesGroovy</id>
          </State>
          <State>
            <id>Assignment issuesJava</id>
          </State>
          <State>
            <id>BPMN 2.0 configuration errors</id>
          </State>
          <State>
            <id>BadExceptionCaught</id>
          </State>
          <State>
            <id>BadExceptionDeclared</id>
          </State>
          <State>
            <id>BadExceptionThrown</id>
          </State>
          <State>
            <id>Batch Applications Issues</id>
          </State>
          <State>
            <id>Bean Validation issues</id>
          </State>
          <State>
            <id>BeforeClassOrAfterClassIsPublicStaticVoidNoArg</id>
          </State>
          <State>
            <id>BeforeOrAfterIsPublicVoidNoArg</id>
          </State>
          <State>
            <id>Bitwise operation issuesJava</id>
          </State>
          <State>
            <id>BlockMarkerComments</id>
          </State>
          <State>
            <id>BooleanExpressionMayBeConditional</id>
          </State>
          <State>
            <id>BreakStatement</id>
          </State>
          <State>
            <id>BreakStatementWithLabel</id>
          </State>
          <State>
            <id>CDI(Contexts and Dependency Injection) issues</id>
          </State>
          <State>
            <id>CFML</id>
          </State>
          <State>
            <id>CSS</id>
          </State>
          <State>
            <id>CStyleArrayDeclaration</id>
          </State>
          <State>
            <id>CallToStringConcatCanBeReplacedByOperator</id>
          </State>
          <State>
            <id>CaughtExceptionImmediatelyRethrown</id>
          </State>
          <State>
            <id>ChainedEquality</id>
          </State>
          <State>
            <id>ChainedMethodCall</id>
          </State>
          <State>
            <id>CheckForOutOfMemoryOnLargeArrayAllocation</id>
          </State>
          <State>
            <id>CheckedExceptionClass</id>
          </State>
          <State>
            <id>ClashingGetters</id>
          </State>
          <State>
            <id>ClashingTraitMethods</id>
          </State>
          <State>
            <id>Class metricsJava</id>
          </State>
          <State>
            <id>Class structureJava</id>
          </State>
          <State>
            <id>Cloning issuesJava</id>
          </State>
          <State>
            <id>Code maturity issuesJava</id>
          </State>
          <State>
            <id>Code style issuesJava</id>
          </State>
          <State>
            <id>CoffeeScript</id>
          </State>
          <State>
            <id>Compiler issuesJava</id>
          </State>
          <State>
            <id>Concurrency annotation issuesJava</id>
          </State>
          <State>
            <id>ConditionalExpression</id>
          </State>
          <State>
            <id>ConditionalExpressionWithIdenticalBranches</id>
          </State>
          <State>
            <id>ConfusingElse</id>
          </State>
          <State>
            <id>ConfusingOctalEscape</id>
          </State>
          <State>
            <id>ConnectionResource</id>
          </State>
          <State>
            <id>ConstantConditionalExpression</id>
          </State>
          <State>
            <id>ConstantIfStatement</id>
          </State>
          <State>
            <id>ConstantJUnitAssertArgument</id>
          </State>
          <State>
            <id>ConstantOnLHSOfComparison</id>
          </State>
          <State>
            <id>ConstantOnRHSOfComparison</id>
          </State>
          <State>
            <id>ContinueOrBreakFromFinallyBlock</id>
          </State>
          <State>
            <id>ContinueStatement</id>
          </State>
          <State>
            <id>ContinueStatementWithLabel</id>
          </State>
          <State>
            <id>Control FlowGroovy</id>
          </State>
          <State>
            <id>Control flow issuesJava</id>
          </State>
          <State>
            <id>ControlFlowStatementWithoutBraces</id>
          </State>
          <State>
            <id>ConvertAnnotations</id>
          </State>
          <State>
            <id>ConvertJavadoc</id>
          </State>
          <State>
            <id>ConvertOldAnnotations</id>
          </State>
          <State>
            <id>Cucumber</id>
          </State>
          <State>
            <id>Cucumber Java</id>
          </State>
          <State>
            <id>Data flow issuesGroovy</id>
          </State>
          <State>
            <id>Data flow issuesJava</id>
          </State>
          <State>
            <id>DataProviderReturnType</id>
          </State>
          <State>
            <id>Declaration redundancyGroovy</id>
          </State>
          <State>
            <id>Declaration redundancyJava</id>
          </State>
          <State>
            <id>DeclarationGroovy</id>
          </State>
          <State>
            <id>DefaultNotLastCaseInSwitch</id>
          </State>
          <State>
            <id>Dependency issuesJava</id>
          </State>
          <State>
            <id>DiamondCanBeReplacedWithExplicitTypeArguments</id>
          </State>
          <State>
            <id>DoubleBraceInitialization</id>
          </State>
          <State>
            <id>DoubleNegation</id>
          </State>
          <State>
            <id>DuplicateBooleanBranch</id>
          </State>
          <State>
            <id>DuplicateCondition</id>
          </State>
          <State>
            <id>DuplicatedDataProviderNames</id>
          </State>
          <State>
            <id>EmptyCatchBlock</id>
          </State>
          <State>
            <id>EmptyFinallyBlock</id>
          </State>
          <State>
            <id>EmptyTryBlock</id>
          </State>
          <State>
            <id>Encapsulation issuesJava</id>
          </State>
          <State>
            <id>EnumSwitchStatementWhichMissesCases</id>
          </State>
          <State>
            <id>EqualityOperatorComparesObjects</id>
          </State>
          <State>
            <id>EqualsCalledOnEnumConstant</id>
          </State>
          <State>
            <id>Error handlingGroovy</id>
          </State>
          <State>
            <id>Error handlingJava</id>
          </State>
          <State>
            <id>ErrorRethrown</id>
          </State>
          <State>
            <id>ExceptionFromCatchWhichDoesntWrap</id>
          </State>
          <State>
            <id>ExpectedExceptionNeverThrown</id>
          </State>
          <State>
            <id>ExpectedExceptionNeverThrownTestNG</id>
          </State>
          <State>
            <id>ExtendsObject</id>
          </State>
          <State>
            <id>ExtendsThrowable</id>
          </State>
          <State>
            <id>Faces Model</id>
          </State>
          <State>
            <id>FallthruInSwitchStatement</id>
          </State>
          <State>
            <id>FieldMayBeFinal</id>
          </State>
          <State>
            <id>Finalization issuesJava</id>
          </State>
          <State>
            <id>FinallyBlockCannotCompleteNormally</id>
          </State>
          <State>
            <id>FlexUnit inspections</id>
          </State>
          <State>
            <id>ForLoopReplaceableByWhile</id>
          </State>
          <State>
            <id>ForLoopWithMissingComponent</id>
          </State>
          <State>
            <id>FreeMarker inspections</id>
          </State>
          <State>
            <id>GPath inspectionsGroovy</id>
          </State>
          <State>
            <id>Gems</id>
          </State>
          <State>
            <id>General</id>
          </State>
          <State>
            <id>GeneralJava</id>
          </State>
          <State>
            <id>Google App Engine</id>
          </State>
          <State>
            <id>Google Web Toolkit issues</id>
          </State>
          <State>
            <id>GrDeprecatedAPIUsage</id>
          </State>
          <State>
            <id>GrFieldAlreadyDefined</id>
          </State>
          <State>
            <id>GrPackage</id>
          </State>
          <State>
            <id>GrReassignedInClosureLocalVar</id>
          </State>
          <State>
            <id>Gradle</id>
          </State>
          <State>
            <id>GrailsGroovy</id>
          </State>
          <State>
            <id>Groovy</id>
          </State>
          <State>
            <id>GroovyConditional</id>
          </State>
          <State>
            <id>GroovyDoubleNegation</id>
          </State>
          <State>
            <id>GroovyEmptyStatementBody</id>
          </State>
          <State>
            <id>GroovyNegatedConditional</id>
          </State>
          <State>
            <id>GroovyNegatedIf</id>
          </State>
          <State>
            <id>GroovyNestedConditional</id>
          </State>
          <State>
            <id>GroovyNestedSwitch</id>
          </State>
          <State>
            <id>GroovyOctalInteger</id>
          </State>
          <State>
            <id>GroovyOverlyComplexArithmeticExpression</id>
          </State>
          <State>
            <id>GroovyOverlyComplexBooleanExpression</id>
          </State>
          <State>
            <id>GroovyPointlessArithmetic</id>
          </State>
          <State>
            <id>GroovyPointlessBoolean</id>
          </State>
          <State>
            <id>GroovyResultOfIncrementOrDecrementUsed</id>
          </State>
          <State>
            <id>Guice Inspections</id>
          </State>
          <State>
            <id>HAML</id>
          </State>
          <State>
            <id>HTML</id>
          </State>
          <State>
            <id>Hibernate Issues</id>
          </State>
          <State>
            <id>IfCanBeAssertion</id>
          </State>
          <State>
            <id>IfMayBeConditional</id>
          </State>
          <State>
            <id>IfStatementWithIdenticalBranches</id>
          </State>
          <State>
            <id>IfStatementWithTooManyBranches</id>
          </State>
          <State>
            <id>IgnoredJUnitTest</id>
          </State>
          <State>
            <id>ImplicitCallToSuper</id>
          </State>
          <State>
            <id>ImportsJava</id>
          </State>
          <State>
            <id>IncompatibleMask</id>
          </State>
          <State>
            <id>InfiniteLoopStatement</id>
          </State>
          <State>
            <id>Inheritance issuesJava</id>
          </State>
          <State>
            <id>Initialization issuesJava</id>
          </State>
          <State>
            <id>InstanceVariableInitialization</id>
          </State>
          <State>
            <id>InstanceVariableUninitializedUse</id>
          </State>
          <State>
            <id>InstanceofCatchParameter</id>
          </State>
          <State>
            <id>InterfaceWithOnlyOneDirectInheritor</id>
          </State>
          <State>
            <id>Internationalization issues</id>
          </State>
          <State>
            <id>Internationalization issuesJava</id>
          </State>
          <State>
            <id>J2ME SupportJava</id>
          </State>
          <State>
            <id>J2ME issuesJava</id>
          </State>
          <State>
            <id>JBoss Seam issues</id>
          </State>
          <State>
            <id>JPA issues</id>
          </State>
          <State>
            <id>JRuby</id>
          </State>
          <State>
            <id>JSF annotated elements errors</id>
          </State>
          <State>
            <id>JSON</id>
          </State>
          <State>
            <id>JSP Inspections</id>
          </State>
          <State>
            <id>JUnit issuesJava</id>
          </State>
          <State>
            <id>JUnit3MethodNamingConvention</id>
          </State>
          <State>
            <id>JUnit3StyleTestMethodInJUnit4Class</id>
          </State>
          <State>
            <id>JUnit4AnnotatedMethodInJUnit3TestCase</id>
          </State>
          <State>
            <id>JUnit4MethodNamingConvention</id>
          </State>
          <State>
            <id>JUnitAbstractTestClassNamingConvention</id>
          </State>
          <State>
            <id>JUnitDatapoint</id>
          </State>
          <State>
            <id>JUnitRule</id>
          </State>
          <State>
            <id>JUnitTestClassNamingConvention</id>
          </State>
          <State>
            <id>JUnitTestNG</id>
          </State>
          <State>
            <id>Java</id>
          </State>
          <State>
            <id>Java EE issues</id>
          </State>
          <State>
            <id>Java language level issuesJava</id>
          </State>
          <State>
            <id>Java language level migration aidsJava</id>
          </State>
          <State>
            <id>JavaBeans issuesJava</id>
          </State>
          <State>
            <id>JavaFX</id>
          </State>
          <State>
            <id>JavaScript</id>
          </State>
          <State>
            <id>Javadoc issuesJava</id>
          </State>
          <State>
            <id>Jpdl Model</id>
          </State>
          <State>
            <id>Kotlin</id>
          </State>
          <State>
            <id>LabeledStatement</id>
          </State>
          <State>
            <id>LambdaBodyCanBeCodeBlock</id>
          </State>
          <State>
            <id>LambdaCanBeReplacedWithAnonymous</id>
          </State>
          <State>
            <id>LambdaParameterTypeCanBeSpecified</id>
          </State>
          <State>
            <id>Language Injection</id>
          </State>
          <State>
            <id>Less</id>
          </State>
          <State>
            <id>ListIndexOfReplaceableByContains</id>
          </State>
          <State>
            <id>LiteralAsArgToStringEquals</id>
          </State>
          <State>
            <id>LocalCanBeFinal</id>
          </State>
          <State>
            <id>Logging issuesJava</id>
          </State>
          <State>
            <id>LoopConditionNotUpdatedInsideLoop</id>
          </State>
          <State>
            <id>LoopStatementsThatDontLoop</id>
          </State>
          <State>
            <id>LoopWithImplicitTerminationCondition</id>
          </State>
          <State>
            <id>MalformedSetUpTearDown</id>
          </State>
          <State>
            <id>Manifest</id>
          </State>
          <State>
            <id>Maven</id>
          </State>
          <State>
            <id>Memory issuesJava</id>
          </State>
          <State>
            <id>Method MetricsGroovy</id>
          </State>
          <State>
            <id>Method metricsJava</id>
          </State>
          <State>
            <id>MethodCallInLoopCondition</id>
          </State>
          <State>
            <id>MethodRefCanBeReplacedWithLambda</id>
          </State>
          <State>
            <id>MigrateAssertToMatcherAssert</id>
          </State>
          <State>
            <id>MisorderedAssertEqualsArgumentsTestNG</id>
          </State>
          <State>
            <id>MisorderedAssertEqualsParameters</id>
          </State>
          <State>
            <id>MissortedModifiers</id>
          </State>
          <State>
            <id>Modularization issuesJava</id>
          </State>
          <State>
            <id>MultiCatchCanBeSplit</id>
          </State>
          <State>
            <id>MultipleDeclaration</id>
          </State>
          <State>
            <id>MultipleExceptionsDeclaredOnTestMethod</id>
          </State>
          <State>
            <id>MultipleTypedDeclaration</id>
          </State>
          <State>
            <id>MultiplyOrDivideByPowerOfTwo</id>
          </State>
          <State>
            <id>Naming ConventionsGroovy</id>
          </State>
          <State>
            <id>Naming conventionsJava</id>
          </State>
          <State>
            <id>NegatedConditional</id>
          </State>
          <State>
            <id>NegatedConditionalExpression</id>
          </State>
          <State>
            <id>NegatedEqualityExpression</id>
          </State>
          <State>
            <id>NegatedIfElse</id>
          </State>
          <State>
            <id>NestedConditionalExpression</id>
          </State>
          <State>
            <id>NestedMethodCall</id>
          </State>
          <State>
            <id>NestedSwitchStatement</id>
          </State>
          <State>
            <id>NestedTryStatement</id>
          </State>
          <State>
            <id>NewExceptionWithoutArguments</id>
          </State>
          <State>
            <id>NewInstanceOfSingleton</id>
          </State>
          <State>
            <id>NonFinalFieldOfException</id>
          </State>
          <State>
            <id>NonFinalStaticVariableUsedInClassInitialization</id>
          </State>
          <State>
            <id>NonThreadSafeLazyInitialization</id>
          </State>
          <State>
            <id>NullThrown</id>
          </State>
          <State>
            <id>Numeric issuesJava</id>
          </State>
          <State>
            <id>OSGi</id>
          </State>
          <State>
            <id>OptionalContainsCollection</id>
          </State>
          <State>
            <id>OtherGroovy</id>
          </State>
          <State>
            <id>OverlyComplexBooleanExpression</id>
          </State>
          <State>
            <id>OverlyLargePrimitiveArrayInitializer</id>
          </State>
          <State>
            <id>OverridableMethodCallDuringObjectConstruction</id>
          </State>
          <State>
            <id>OverriddenMethodCallDuringObjectConstruction</id>
          </State>
          <State>
            <id>Packaging issuesJava</id>
          </State>
          <State>
            <id>Pages Navigation Model</id>
          </State>
          <State>
            <id>ParameterizedParametersStaticCollection</id>
          </State>
          <State>
            <id>Pattern Validation</id>
          </State>
          <State>
            <id>Performance issuesJava</id>
          </State>
          <State>
            <id>Play</id>
          </State>
          <State>
            <id>Plugin DevKit</id>
          </State>
          <State>
            <id>PointlessBitwiseExpression</id>
          </State>
          <State>
            <id>PointlessBooleanExpression</id>
          </State>
          <State>
            <id>PointlessIndexOfComparison</id>
          </State>
          <State>
            <id>PointlessNullCheck</id>
          </State>
          <State>
            <id>Portability issuesJava</id>
          </State>
          <State>
            <id>Potentially confusing code constructsGroovy</id>
          </State>
          <State>
            <id>PrivateMemberAccessBetweenOuterAndInnerClass</id>
          </State>
          <State>
            <id>Probable bugsGroovy</id>
          </State>
          <State>
            <id>Probable bugsJava</id>
          </State>
          <State>
            <id>Properties Files</id>
          </State>
          <State>
            <id>Properties FilesJava</id>
          </State>
          <State>
            <id>RELAX NG</id>
          </State>
          <State>
            <id>RESTful Web Service</id>
          </State>
          <State>
            <id>Rails</id>
          </State>
          <State>
            <id>RawTypeCanBeGeneric</id>
          </State>
          <State>
            <id>RecordStoreResource</id>
          </State>
          <State>
            <id>RedundantFieldInitialization</id>
          </State>
          <State>
            <id>RedundantImplements</id>
          </State>
          <State>
            <id>Resource management issuesJava</id>
          </State>
          <State>
            <id>ReturnFromFinallyBlock</id>
          </State>
          <State>
            <id>ReturnSeparatedFromComputation</id>
          </State>
          <State>
            <id>ReturnThis</id>
          </State>
          <State>
            <id>Ruby</id>
          </State>
          <State>
            <id>SQL</id>
          </State>
          <State>
            <id>Sass/SCSS</id>
          </State>
          <State>
            <id>Security issuesJava</id>
          </State>
          <State>
            <id>Serialization issuesJava</id>
          </State>
          <State>
            <id>ShiftOutOfRange</id>
          </State>
          <State>
            <id>SimplifiableAnnotation</id>
          </State>
          <State>
            <id>SimplifiableBooleanExpression</id>
          </State>
          <State>
            <id>SimplifiableConditionalExpression</id>
          </State>
          <State>
            <id>SimplifiableEqualsExpression</id>
          </State>
          <State>
            <id>SimplifiableIfStatement</id>
          </State>
          <State>
            <id>SimplifiableJUnitAssertion</id>
          </State>
          <State>
            <id>SingleCharacterStartsWith</id>
          </State>
          <State>
            <id>SingleElementAnnotation</id>
          </State>
          <State>
            <id>SingleStatementInBlock</id>
          </State>
          <State>
            <id>SizeReplaceableByIsEmpty</id>
          </State>
          <State>
            <id>SonarQube</id>
          </State>
          <State>
            <id>SonarQube (new issues)</id>
          </State>
          <State>
            <id>Spelling</id>
          </State>
          <State>
            <id>Spring</id>
          </State>
          <State>
            <id>SqlAddNotNullColumnInspection</id>
          </State>
          <State>
            <id>SqlAmbiguousColumnInspection</id>
          </State>
          <State>
            <id>SqlAutoIncrementDuplicateInspection</id>
          </State>
          <State>
            <id>SqlCheckUsingColumnsInspection</id>
          </State>
          <State>
            <id>SqlConstantConditionInspection</id>
          </State>
          <State>
            <id>SqlDeprecateTypeInspection</id>
          </State>
          <State>
            <id>SqlDerivedTableAliasInspection</id>
          </State>
          <State>
            <id>SqlDialectInspection</id>
          </State>
          <State>
            <id>SqlDropIndexedColumnInspection</id>
          </State>
          <State>
            <id>SqlIdentifierInspection</id>
          </State>
          <State>
            <id>SqlInsertValuesInspection</id>
          </State>
          <State>
            <id>SqlNoDataSourceInspection</id>
          </State>
          <State>
            <id>SqlNullComparisonInspection</id>
          </State>
          <State>
            <id>SqlPostgresqlSelectFromProcedureInspection</id>
          </State>
          <State>
            <id>SqlResolveInspection</id>
          </State>
          <State>
            <id>SqlShouldBeInGroupByInspection</id>
          </State>
          <State>
            <id>SqlSignatureInspection</id>
          </State>
          <State>
            <id>SqlTypeInspection</id>
          </State>
          <State>
            <id>SqlUnusedVariableInspection</id>
          </State>
          <State>
            <id>StaticSuite</id>
          </State>
          <State>
            <id>StaticVariableInitialization</id>
          </State>
          <State>
            <id>StaticVariableUninitializedUse</id>
          </State>
          <State>
            <id>Struts</id>
          </State>
          <State>
            <id>StyleGroovy</id>
          </State>
          <State>
            <id>SuperTearDownInFinally</id>
          </State>
          <State>
            <id>SwitchStatement</id>
          </State>
          <State>
            <id>SwitchStatementDensity</id>
          </State>
          <State>
            <id>SwitchStatementWithConfusingDeclaration</id>
          </State>
          <State>
            <id>SwitchStatementWithTooFewBranches</id>
          </State>
          <State>
            <id>SwitchStatementWithTooManyBranches</id>
          </State>
          <State>
            <id>SwitchStatementsWithoutDefault</id>
          </State>
          <State>
            <id>Tapestry</id>
          </State>
          <State>
            <id>TestCaseInProductCode</id>
          </State>
          <State>
            <id>TestCaseWithConstructor</id>
          </State>
          <State>
            <id>TestCaseWithNoTestMethods</id>
          </State>
          <State>
            <id>TestMethodInProductCode</id>
          </State>
          <State>
            <id>TestMethodIsPublicVoidNoArg</id>
          </State>
          <State>
            <id>TestMethodWithoutAssertion</id>
          </State>
          <State>
            <id>TestNGDataProvider</id>
          </State>
          <State>
            <id>TestNGJava</id>
          </State>
          <State>
            <id>TestNGMethodNamingConvention</id>
          </State>
          <State>
            <id>ThisEscapedInConstructor</id>
          </State>
          <State>
            <id>ThreadDeathRethrown</id>
          </State>
          <State>
            <id>Threading issuesGroovy</id>
          </State>
          <State>
            <id>Threading issuesJava</id>
          </State>
          <State>
            <id>ThrowCaughtLocally</id>
          </State>
          <State>
            <id>ThrowFromFinallyBlock</id>
          </State>
          <State>
            <id>ThrowsRuntimeException</id>
          </State>
          <State>
            <id>Thymeleaf</id>
          </State>
          <State>
            <id>TooBroadCatch</id>
          </State>
          <State>
            <id>TooBroadThrows</id>
          </State>
          <State>
            <id>TrivialIf</id>
          </State>
          <State>
            <id>TryStatementWithMultipleResources</id>
          </State>
          <State>
            <id>TypeParameterExtendsObject</id>
          </State>
          <State>
            <id>TypeScript</id>
          </State>
          <State>
            <id>UI Form Problems</id>
          </State>
          <State>
            <id>UncheckedExceptionClass</id>
          </State>
          <State>
            <id>UnclearBinaryExpression</id>
          </State>
          <State>
            <id>UnconstructableTestCase</id>
          </State>
          <State>
            <id>UndeclaredTests</id>
          </State>
          <State>
            <id>UnnecessarilyQualifiedInnerClassAccess</id>
          </State>
          <State>
            <id>UnnecessarilyQualifiedStaticUsage</id>
          </State>
          <State>
            <id>UnnecessarilyQualifiedStaticallyImportedElement</id>
          </State>
          <State>
            <id>UnnecessaryBlockStatement</id>
          </State>
          <State>
            <id>UnnecessaryBreak</id>
          </State>
          <State>
            <id>UnnecessaryCallToStringValueOf</id>
          </State>
          <State>
            <id>UnnecessaryConditionalExpression</id>
          </State>
          <State>
            <id>UnnecessaryConstantArrayCreationExpression</id>
          </State>
          <State>
            <id>UnnecessaryConstructor</id>
          </State>
          <State>
            <id>UnnecessaryContinue</id>
          </State>
          <State>
            <id>UnnecessaryDefault</id>
          </State>
          <State>
            <id>UnnecessaryEnumModifier</id>
          </State>
          <State>
            <id>UnnecessaryFinalOnLocalVariableOrParameter</id>
          </State>
          <State>
            <id>UnnecessaryFullyQualifiedName</id>
          </State>
          <State>
            <id>UnnecessaryInitCause</id>
          </State>
          <State>
            <id>UnnecessaryInterfaceModifier</id>
          </State>
          <State>
            <id>UnnecessaryLabelOnBreakStatement</id>
          </State>
          <State>
            <id>UnnecessaryLabelOnContinueStatement</id>
          </State>
          <State>
            <id>UnnecessaryParentheses</id>
          </State>
          <State>
            <id>UnnecessaryQualifiedReference</id>
          </State>
          <State>
            <id>UnnecessaryQualifierForThis</id>
          </State>
          <State>
            <id>UnnecessaryReturn</id>
          </State>
          <State>
            <id>UnnecessarySemicolon</id>
          </State>
          <State>
            <id>UnnecessarySuperConstructor</id>
          </State>
          <State>
            <id>UnnecessarySuperQualifier</id>
          </State>
          <State>
            <id>UnnecessaryThis</id>
          </State>
          <State>
            <id>UnnecessaryToStringCall</id>
          </State>
          <State>
            <id>UnqualifiedFieldAccess</id>
          </State>
          <State>
            <id>UnqualifiedInnerClassAccess</id>
          </State>
          <State>
            <id>UnqualifiedMethodAccess</id>
          </State>
          <State>
            <id>UnqualifiedStaticUsage</id>
          </State>
          <State>
            <id>UnusedCatchParameter</id>
          </State>
          <State>
            <id>UseOfObsoleteAssert</id>
          </State>
          <State>
            <id>Validity issuesGroovy</id>
          </State>
          <State>
            <id>Velocity inspections</id>
          </State>
          <State>
            <id>Verbose or redundant code constructsJava</id>
          </State>
          <State>
            <id>Visibility issuesJava</id>
          </State>
          <State>
            <id>WSDL issues</id>
          </State>
          <State>
            <id>Web Services</id>
          </State>
          <State>
            <id>WebSocket issues</id>
          </State>
          <State>
            <id>XML</id>
          </State>
          <State>
            <id>XPath</id>
          </State>
          <State>
            <id>XSLT</id>
          </State>
          <State>
            <id>dependsOnMethodTestNG</id>
          </State>
          <State>
            <id>groupsTestNG</id>
          </State>
          <State>
            <id>toString() issuesJava</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="CodeStyleSchemesUIConfiguration">
    <option name="RECENT_IMPORT_FILE_LOCATION" value="file:$USER_HOME$/Downloads/intellij-java-google-style.xml" />
  </component>
  <component name="CvsApplicationLevelConfiguration">
    <option name="PATH_TO_PASSWORD_FILE" value="$userdir/.cvspass" />
  </component>
  <component name="ErrorReportConfigurable">
    <option name="ITN_LOGIN" value="" />
    <option name="ITN_PASSWORD_CRYPT" value="" />
    <option name="KEEP_ITN_PASSWORD" value="false" />
    <option name="EMAIL" value="" />
  </component>
  <component name="NodeJsLocalInterpreters">
    <local-interpreter path="/usr/bin/node" />
  </component>
  <component name="Rearranger">
    <Rearranger KeepGettersSettersTogether="false" KeepGettersSettersWithProperty="false" KeepOverloadedMethodsTogether="false" ConfirmBeforeRearranging="false" RearrangeInnerClasses="false" globalCommentPattern="" overloadedOrder="0" ShowParameterTypes="true" ShowParameterNames="false" ShowFields="true" ShowTypeAfterMethod="true" ShowRules="false" ShowMatchedRules="false" ShowComments="false" RemoveBlanksInsideCodeBlocks="false">
      <Items />
      <Classes />
      <DefaultGetterSetterDefinition>
        <GetterSetterDefinition getterBody="0" getterName="0" setterBody="0" setterName="0" />
      </DefaultGetterSetterDefinition>
      <RelatedMethods moveExtractedMethods="false" belowFirstCaller="true" depthFirstOrdering="true" ordering="0" nonPrivateTreatment="2" commentType="0" fillString="" useProjectWidthForFill="true" fillWidth="0">
        <PrecedingComment>
          <Comment condition="0" nPrecedingRulesToMatch="1" nSubsequentRulesToMatch="1" allPrecedingRules="true" allSubsequentRules="true" fillString="" useProjectWidthForFill="true" fillWidth="0" />
        </PrecedingComment>
        <TrailingComment>
          <Comment condition="0" nPrecedingRulesToMatch="1" nSubsequentRulesToMatch="1" allPrecedingRules="true" allSubsequentRules="true" fillString="" useProjectWidthForFill="true" fillWidth="0" />
        </TrailingComment>
      </RelatedMethods>
      <AfterClassLBrace Force="false" nBlankLines="0" />
      <AfterClassRBrace Force="false" nBlankLines="0" />
      <BeforeClassRBrace Force="false" nBlankLines="0" />
      <BeforeMethodLBrace Force="false" nBlankLines="0" />
      <AfterMethodLBrace Force="false" nBlankLines="0" />
      <AfterMethodRBrace Force="false" nBlankLines="0" />
      <BeforeMethodRBrace Force="false" nBlankLines="0" />
      <NewlinesAtEOF Force="false" nBlankLines="0" />
    </Rearranger>
  </component>
  <component name="RefactoringSettings">
    <option name="MOVE_PREVIEW_USAGES" value="false" />
    <option name="INTRODUCE_LOCAL_CREATE_FINALS" value="false" />
  </component>
  <component name="SvnApplicationSettings">
    <option name="myCheckoutURLs">
      <list>
        <option value="http://svn.us.apache.org/viewvc/camel/trunk/" />
        <option value="http://svn.apache.org/viewvc/camel/trunk/camel-core/" />
      </list>
    </option>
    <option name="myTypedURLs">
      <list>
        <option value="http://svn.us.apache.org/viewvc/camel/trunk/" />
        <option value="http://svn.apache.org/viewvc/camel/trunk/camel-core/" />
        <option value="http://svn.apache.org/viewvc/camel/trunk/" />
      </list>
    </option>
  </component>
  <component name="ToStringSettings">
    <option name="insertNewMethodInitialOption" value="At the end of class" />
    <option name="insertNewMethodOption" value="At the end of class" />
  </component>
</application>